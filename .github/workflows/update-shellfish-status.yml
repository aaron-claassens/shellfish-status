name: Update Shellfish Status JSON

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'

jobs:
  build-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install scraping dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Scrape NSW Shellfish Status and write status.json
        run: |
          python - << 'PYCODE'
          import requests
          from requests.adapters import HTTPAdapter, Retry
          from bs4 import BeautifulSoup
          import json, os, datetime

          URL = "https://www.foodauthority.nsw.gov.au/industry/shellfish/status"

          # 1) Set up a Session with retries/backoff
          session = requests.Session()
          retries = Retry(
              total=5,
              backoff_factor=1,
              status_forcelist=[429, 500, 502, 503, 504],
              allowed_methods=["GET"],
          )
          session.mount("https://", HTTPAdapter(max_retries=retries))

          # 2) Fetch with a generous timeout (connect, read)
          headers = {"User-Agent": "Mozilla/5.0 (compatible; GitHub Actions)"}
          resp = session.get(URL, headers=headers, timeout=(10, 120))
          resp.raise_for_status()

          # 3) Parse out open/closed
          soup = BeautifulSoup(resp.text, "html.parser")
          status_divs = soup.select(".sqap-card__status .field__item")
          open_count = sum(1 for d in status_divs if d.text.strip().lower() == "open")
          closed_count = sum(1 for d in status_divs if d.text.strip().lower() == "closed")

          # 4) Write status.json
          data = {
              "open": open_count,
              "closed": closed_count,
              "last_updated": datetime.datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ")
          }
          with open("status.json", "w", encoding="utf-8") as f:
              json.dump(data, f, ensure_ascii=False, indent=2)

          print(f"Wrote status.json: open={open_count}, closed={closed_count}")
          PYCODE

      - name: Commit status.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add status.json
          if ! git diff --cached --quiet; then
            git commit -m "Automated update of shellfish status (every 15 min)"
            git push
          else
            echo "No changes to status.json; skipping commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
